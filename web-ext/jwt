#!/bin/bash

declare -A JWTOPTS

usage() {
  cat <<EOF
jwt is a simple bash script for creating/signing JSON Web Tokens (JWT).

Usage: jwt options [claims]

Options:
  -a    specify the signing algorithm
  -s    signing algorithm secret
  -h    display this help text and exit

Claims can be provided as either an argument or streamed in thru |.
EOF
}

alg=
s8=

while getopts ':a:s:h' opt; do
  case "${opt}" in
    a)
      alg=$OPTARG
      ;;
    s)
      s8=$OPTARG
      ;;
    h)
      usage
      exit 0
      ;;
  esac
done
shift "$(($OPTIND -1))"

if [ -z $alg ]; then
  echo "Signing algorithm must be provided"
  exit 1
fi

if [ -z $s8 ]; then
  echo "Signing secret must be provided"
  exit 1
fi

# Construct and encode header
HEADER=$(echo -en "{\"alg\":\"$alg\",\"typ\":\"JWT\"}" | base64 | tr -d = | tr '+/' '-_')

# Get claims from arg/stdin and encode
[ -z "$1" ] && RAW_CLAIMS=$(cat /dev/stdin) || RAW_CLAIMS="$1"
CLAIMS=$(echo -n "$RAW_CLAIMS" | base64 | tr -d = | tr -d '\n' | tr '+/' '-_')

# Generate signature
SIG=$(echo -n "${HEADER}.${CLAIMS}"| openssl dgst -binary -sha256 -hmac $s8 | base64 | tr -d = | tr -d '\n' | tr '+/' '-_')

# Return JWT
echo -n "${HEADER}.${CLAIMS}.${SIG}"
